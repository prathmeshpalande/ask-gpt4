
            message = 'import React, { useState } from \'react\';\nimport { View, Text, TextInput, Button, StyleSheet, Alert } from \'react-native\';\n\nfunction OtpScreen({ route, navigation }) {\n    const { email, new_user } = route.params;\n    const [otp, setOtp] = useState(\'\');\n\n    const handleOtpChange = (text) => {\n        const numericText = text.replace(/[^0-9]/g, \'\');\n        setOtp(numericText);\n    };\n\n    const handleOtpSubmit = async () => {\n        try {\n            const response = await fetch(\'http://192.168.1.4:65535/verify_otp\', {\n                method: \'POST\',\n                headers: {\n                    \'Content-Type\': \'application/json\',\n                },\n                body: JSON.stringify({ email, otp }),\n            });\n\n            const data = await response.json();\n            if (!response.ok) {\n                throw new Error(data.message);\n            }\n\n            // Resetting the navigation stack and directing the user as per their status\n            if (new_user) {\n                navigation.reset({\n                    index: 0,\n                    routes: [{ name: \'CompleteProfile\', params: { email } }],\n                });\n            } else {\n                navigation.reset({\n                    index: 0,\n                    routes: [{ name: \'MultiChills\' }],\n                });\n            }\n\n        } catch (error) {\n            Alert.alert(\'Verification Failed\', error.message);\n        }\n    };\n\n    return (\n        <View style={styles.container}>\n            <Text>OTP</Text>\n            <TextInput\n                style={styles.input}\n                onChangeText={handleOtpChange}\n                value={otp}\n                placeholder="Enter OTP"\n                keyboardType="numeric" // Set the keyboard type to numeric\n            />\n            <Button title="Submit" onPress={handleOtpSubmit} />\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: \'center\',\n        alignItems: \'center\',\n        padding: 20,\n    },\n    input: {\n        width: \'100%\',\n        height: 40,\n        margin: 12,\n        borderWidth: 1,\n        padding: 10,\n    },\n});\n\nexport default OtpScreen;\n\nWrite a React Native component for the following screen:\n1. File Name: CompleteProfile.js\n2. Input Fields:\n2.1 email - string - non-editable (will be received as props from OtpScreen.js)\n2.2 Username - String\n2.3 First Name - String\n2.4 Last Name - String\n2.5 Gender - Dropdown with (Male, Female, Non-Binary)\n2.6 Date of Birth - Calendar dropdown\n2.7 About yourself - String\n2.8 Where do you stay?  - String\n\nAlso, modify the OtpScreen.js file so that email is being passed as props to the CompleteProfile screen. Also provide the required installation commands'

            response = 'Below, I provide the React Native component `CompleteProfile.js` that you requested, as well as modifications to the `OtpScreen.js` file to pass the email as props. At the end, I will detail necessary React Native library installation commands for handling a calendar dropdown.\n\n### `CompleteProfile.js`\nThis file contains a functional component that receives an email via props and contains various input fields as described.\n\n```javascript\nimport React, { useState } from \'react\';\nimport { View, Text, TextInput, Button, Picker, StyleSheet } from \'react-native\';\nimport DatePicker from "@react-native-community/datetimepicker"; //Calendar dropdown\n\nfunction CompleteProfile({ route }) {\n    const { email } = route.params;\n    const [username, setUsername] = useState(\'\');\n    const [firstName, setFirstName] = useState(\'\');\n    const [lastName, setLastName] = useState(\'\');\n    const [gender, setGender] = useState(\'Male\');\n    const [dateOfBirth, setDateOfBirth] = useState(new Date());\n    const [about, setAbout] = useState(\'\');\n    const [location, setLocation] = useState(\'\');\n\n    const handleDateChange = (event, selectedDate) => {\n        const currentDate = selectedDate || dateOfBirth;\n        setDateOfBirth(currentDate);\n    };\n\n    return (\n        <View style={styles.container}>\n            <Text>Email: {email}</Text>\n            <TextInput \n                style={styles.input} \n                value={username} \n                onChangeText={setUsername}\n                placeholder="Username" \n            />\n            <TextInput \n                style={styles.input} \n                value={firstName} \n                onChangeText={setFirstName} \n                placeholder="First Name" \n            />\n            <TextInput \n                style={styles.input} \n                value={lastName} \n                onChangeText={setLastName} \n                placeholder="Last Name" \n            />\n            <Picker \n                selectedValue={gender} \n                style={styles.input} \n                onValueChange={(itemValue) => setGender(itemValue)}>\n                <Picker.Item label="Male" value="Male" />\n                <Picker.Item label="Female" value="Female" />\n                <Picker.Item label="Non-Binary" value="Non-Binary" />\n            </Picker>\n            <DatePicker \n                value={dateOfBirth}\n                mode="date"\n                display="default"\n                onChange={handleDateChange}\n            />\n            <TextInput \n                style={styles.input} \n                value={about}\n                onChangeText={setAbout}\n                placeholder="About yourself" \n            />\n            <TextInput \n                style={styles.input} \n                value={location}\n                onChangeText={setLocation}\n                placeholder="Where do you stay?" \n            />\n            <Button title="Save Profile" onPress={() => null} />\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 20,\n        justifyContent: \'center\',\n    },\n    input: {\n        width: \'100%\',\n        height: 50,\n        marginBottom: 12,\n        borderWidth: 1,\n        padding: 10,\n        borderRadius: 5,\n    },\n});\n\nexport default CompleteProfile;\n```\n\n### Required Installation for the date picker\nTo handle the date input in React Native, you can use the community package `@react-native-community/datetimepicker`. Install it with the following command:\n\n```bash\nnpm install @react-native-community/datetimepicker --save\n```\n\nAnd for iOS, don\'t forget to run:\n\n```bash\ncd ios && pod install\n```\n\n### Modification to OtpScreen.js\nThe described changes (passing `email` as props to the `CompleteProfile` screen) are already implemented in the provided `OtpScreen.js` under the routing to `CompleteProfile`:\n\n```javascript\nnavigation.reset({\n    index: 0,\n    routes: [{ name: \'CompleteProfile\', params: { email } }],\n});\n```\n\nThis ensures that when navigating to the `CompleteProfile` screen, the `email` variable is included in the parameters, as required.'
            