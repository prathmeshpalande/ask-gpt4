
            message = 'import React, { useState } from \'react\';\nimport { StyleSheet, View, TextInput, Text, Button, Image } from \'react-native\';\n\nconst LoginScreen = () => {\n  const [email, setEmail] = useState(\'\');\n  const [password, setPassword] = useState(\'\');\n\n  const handleLogin = () => {\n    // TODO: Implement the login logic\n    console.log(\'Login pressed\', email, password);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.logoContainer}>\n        {/* TODO: Replace with actual logo image */}\n        <Image source={require(\'./path-to-your-logo.png\')} style={styles.logo} /> \n      </View>\n      <Text style={styles.title}>Login</Text>\n      <Text style={styles.label}>Enter your email address and password</Text>\n      <TextInput\n        style={styles.input}\n        value={email}\n        onChangeText={setEmail}\n        placeholder="Email Address"\n        autoCapitalize="none"\n      />\n      <TextInput\n        style={styles.input}\n        value={password}\n        onChangeText={setPassword}\n        placeholder="Password"\n        secureTextEntry\n      />\n      <Button title="Login" onPress={handleLogin} color="#007AFF" />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \'center\',\n    alignItems: \'center\',\n    padding: 20,\n    backgroundColor: \'#FFF\',\n  },\n  logoContainer: {\n    marginBottom: 20,\n  },\n  logo: {\n    width: 100,\n    height: 100,\n    // TODO: Adjust the image dimensions as needed\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \'bold\',\n    marginBottom: 10,\n  },\n  label: {\n    fontSize: 16,\n    marginBottom: 5,\n  },\n  input: {\n    width: \'100%\',\n    height: 40,\n    borderColor: \'gray\',\n    borderWidth: 1,\n    paddingLeft: 10,\n    marginBottom: 10,\n  }\n});\n\nexport default LoginScreen;\n\n\nThis screen, when opened on web, has stetched horizontal email and password inputs. However, I don\'t want that, I want them narrow like gmail has a box in the centre for login'

            response = 'To fix the issue with the stretched horizontal email and password inputs on your React Native login form, you can limit the maximum width of the inputs and center them by using a wrapper view. This approach allows you to create a more visually appealing, centered box for the login inputs similar to the Gmail login interface.\n\nBelow is the adjusted React component with changes to the styles to accommodate narrower input fields centered on the screen:\n\n```javascript\nimport React, { useState } from \'react\';\nimport { StyleSheet, View, TextInput, Text, Button, Image } from \'react-native\';\n\nconst LoginScreen = () => {\n  const [email, setEmail] = useState(\'\');\n  const [password, setPassword] = useState(\'\');\n\n  const handleLogin = () => {\n    console.log(\'Login pressed\', email, password);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.logoContainer}>\n        {/* Make sure to replace the placeholder path with your actual image path */}\n        <Image source={require(\'./path-to-your-logo.png\')} style={styles.logo} />\n      </View>\n      <View style={styles.loginForm}>\n        <Text style={styles.title}>Login</Text>\n        <Text style={styles.label}>Enter your email address and password</Text>\n        \n        <TextInput\n          style={styles.input}\n          value={email}\n          onChangeText={setEmail}\n          placeholder="Email Address"\n          autoCapitalize="none"\n        />\n        <TextInput\n          style={styles.input}\n          value={password}\n          onChangeText={setPassword}\n          placeholder="Password"\n          secureTextEntry\n        />\n        <Button title="Login" onPress={handleLogin} color="#007AFF" />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \'center\',\n    alignItems: \'center\',\n    padding: 20,\n    backgroundColor: \'#FFF\',\n  },\n  logoContainer: {\n    marginBottom: 20,\n  },\n  logo: {\n    width: 100,\n    height: 100,\n  },\n  loginForm: {\n    width: \'80%\', // Adjust width as needed for design requirements\n    maxWidth: 400, // Sets the max width to 400 pixels\n    alignItems: \'center\',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \'bold\',\n    marginBottom: 10,\n  },\n  label: {\n    fontSize: 16,\n    marginBottom: 5,\n  },\n  input: {\n    width: \'100%\',\n    height: 40,\n    borderColor: \'gray\',\n    borderWidth: 1,\n    paddingLeft: 10,\n    marginBottom: 10,\n  },\n});\n\nexport default LoginScreen;\n```\n\n### Changes Made:\n1. **loginForm View:** A wrapping `View` around the input fields and login button that restricts the maximum width and centers the elements to give a narrow, centered look like the Gmail login box.\n\n2. **Styles Changes:**\n   - `loginForm`: Added `maxWidth` to restrict the size of the form and `alignItems: \'center\'` to ensure all child elements (input fields and button) are centered.\n   - `container`: Ensures that the outer container remains centered both vertically and horizontally.\n\nThese changes should provide a more aesthetically pleasing layout that avoids excessively wide elements on wider screens such as desktops or larger tablets.'
            